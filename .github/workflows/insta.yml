# .github/workflows/post_events_image.yml
name: Post events image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"          # 06 UTC ≈ 08 Uhr Berlin

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      # 0 Repo
      - uses: actions/checkout@v4

      # 1 Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 2 venv + saubere MoviePy-Installation
      - name: Create & populate venv
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate

          # alte MoviePy-Reste löschen
          sitepkgs=$(python - <<'PY'
import site,sys; print(site.getsitepackages()[0])
PY
          )
          rm -rf "$sitepkgs/moviepy" "$sitepkgs"/moviepy-*.dist-info || true

          # Pakete installieren
          python -m pip install --upgrade pip
          python -m pip install --no-cache-dir -r requirements3.txt

          # Import-Check
          python - <<'PY'
import moviepy, pathlib, sys
print("moviepy-Version:", moviepy.__version__)
print("Pfad:", pathlib.Path(moviepy.__file__).resolve())
import moviepy.editor
print("✅ moviepy.editor import OK")
PY

      # 3 Secrets-Check
      - name: Debug env variables
        env:
          GITHUB_TOKEN:    ${{ secrets.PAT_TOKEN }}
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}
        shell: bash
        run: |
          echo "🔎 Prüfe erforderliche ENV-Variablen:"
          for V in GITHUB_TOKEN GITHUB_REPOSITORY IG_ACCESS_TOKEN IG_USER_ID; do
            [ -n "${!V}" ] && echo "$V = ✅ gesetzt" || echo "$V = ❌ fehlt!"
          done

      # 4 Skript ausführen
      - name: Generate, upload & post image
        shell: bash
        env:
          GITHUB_TOKEN:    ${{ secrets.PAT_TOKEN }}
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}
        run: |
          source .venv/bin/activate
          python insta.py
