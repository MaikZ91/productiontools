# .github/workflows/post_events_image.yml
# L√§dt Events-Bild ins Repo und postet es auf Instagram.
# Nutzt dein **PAT_TOKEN** statt des automatisch erzeugten GITHUB_TOKEN.

name: Post events image

on:
  workflow_dispatch:                # manueller Button
  schedule:
    - cron: "0 6 * * *"             # 06 UTC = 08 Uhr Berlin (Sommerzeit)

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      # 1) Repository auschecken
      - uses: actions/checkout@v4

      # 2) Python 3.11 installieren
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) Abh√§ngigkeiten
      - name: Install Python deps
        run: pip install --upgrade pip
             pip install Pillow requests pytz matplotlib moviepy
      # 4) Debug-Step ‚Äì pr√ºft, ob alle Variablen gesetzt sind
      - name: Debug env variables
        env:
          GITHUB_TOKEN:   ${{ secrets.PAT_TOKEN }}        # ‚Üê dein PAT
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }} # bereits angelegt
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}      # bereits angelegt
        run: |
          echo "üîé Pr√ºfe erforderliche ENV-Variablen:"
          for V in GITHUB_TOKEN GITHUB_REPOSITORY IG_ACCESS_TOKEN IG_USER_ID; do
            [ -n "${!V}" ] && echo "$V = ‚úÖ gesetzt" || echo "$V = ‚ùå fehlt!"
          done

      # 5) Bild generieren, ins Repo laden & auf Instagram posten
      - name: Generate, upload & post image
        env:
          GITHUB_TOKEN:   ${{ secrets.PAT_TOKEN }}        # PAT ‚Üí insta.py
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}
        run: python insta.py
