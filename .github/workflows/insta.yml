# .github/workflows/post_events_image.yml
name: Post events image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"   # 06 UTC = 08 Uhr Berlin

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      # Repository auschecken
      - uses: actions/checkout@v4

      # Python 3.11 einrichten
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ------------------------------
      # 0) Guard: brich ab, falls im Repo ein 'moviepy'-Modul liegt
      # ------------------------------
      - name: Abort if a local module named "moviepy" exists
        run: |
          if [ -e moviepy.py ] || [ -d moviepy ]; then
            echo "::error::Local file or folder 'moviepy' shadows the pip package."
            exit 1
          fi

      # ------------------------------
      # 1) Abh√§ngigkeiten installieren
      # ------------------------------
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements3.txt

      # ------------------------------
      # 2) Pr√ºfen, ob moviepy korrekt geladen wird
      # ------------------------------
      - name: Verify moviepy is importable
        run: |
          python - <<'PY'
          import pathlib, sys
          try:
              import moviepy
              print("moviepy wurde geladen von:", pathlib.Path(moviepy.__file__).resolve())
          except Exception as e:
              sys.stderr.write(f"‚ùå import moviepy schlug fehl: {e}\n")
              sys.exit(1)
          try:
              import moviepy.editor
              print("‚úÖ moviepy.editor import OK")
          except ModuleNotFoundError as e:
              sys.stderr.write(f"‚ùå moviepy.editor fehlt: {e}\n")
              sys.exit(1)
          PY

      # ------------------------------
      # 3) Debug: erforderliche Secrets ausgegeben
      # ------------------------------
      - name: Debug environment variables
        env:
          GITHUB_TOKEN:    ${{ secrets.PAT_TOKEN }}      # Personal Access Token
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}
        run: |
          echo "üîé Pr√ºfe erforderliche ENV-Variablen:"
          for V in GITHUB_TOKEN GITHUB_REPOSITORY IG_ACCESS_TOKEN IG_USER_ID; do
            if [ -n "${!V}" ]; then
              echo "$V = ‚úÖ gesetzt"
            else
              echo "$V = ‚ùå fehlt!"
            fi
          done

      # ------------------------------
      # 4) Hauptskript ausf√ºhren
      # ------------------------------
      - name: Generate, upload & post image
        env:
          GITHUB_TOKEN:    ${{ secrets.PAT_TOKEN }}
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
          IG_USER_ID:      ${{ secrets.IG_USER_ID }}
        run: python insta.py
